name: Go Cross-Platform Build and Release

permissions:
  contents: write  # Ensure permission to write to release

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - linux
          - windows
          - darwin
        goarch:
          - amd64
          - arm64
    steps:
      - uses: actions/checkout@v4  # Checkout code

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # Set Go version

      - name: Build
        run: |
          EXT=""
          if [ "${{ matrix.goos }}" == "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o ./receivepay-${{ matrix.goos }}-${{ matrix.goarch }}$EXT ./cmd
          if [ "${{ matrix.goos }}" != "windows" ]; then
            chmod +x ./receivepay-${{ matrix.goos }}-${{ matrix.goarch }}
          fi

      - name: Test
        run: go test -v ./...

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-binaries
          path: ./receivepay-*

  create_release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Only run on push to main
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: release-binaries

      - name: Set execute permissions for Unix-like systems
        run: |
          chmod +x ./receivepay-linux-*
          chmod +x ./receivepay-darwin-*

      - name: Create Release
        id: create_release
        run: |
          TAG_NAME=$(date +'v%Y.%m.%d-%H%M%S')
          echo "Creating release $TAG_NAME"
          gh release create $TAG_NAME ./receivepay-* \
            --title "Release $TAG_NAME" \
            --notes "Instructions: https://github.com/HEUDavid/auto-receive-crypto-pay" \
            --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
